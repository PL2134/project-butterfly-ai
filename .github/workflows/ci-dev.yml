# .github/workflows/ci-dev.yml – Auto-versioning for dev (test-vX.X.X)
name: CI – Auto-Version & Push Dev Image to GHCR

on:
  push:
    branches:
      - dev

jobs:
  version-and-build-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Get latest dev tag
      id: get_version
      run: |
        latest=$(git tag -l 'test-v*' --sort=-v:refname | head -n1)
        echo "Latest tag: $latest"
        if [[ "$latest" == "" ]]; then
          version="1.0.0"
        else
          ver=$(echo $latest | sed 's/test-v//')
          IFS='.' read -r major minor patch <<< "$ver"
          patch=$((patch+1))
          version="${major}.${minor}.${patch}"
        fi
        echo "version=$version" >> $GITHUB_OUTPUT
        echo "::notice title=Dev Docker Version::test-v$version"

    - name: Create dev tag
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag test-v${{ steps.get_version.outputs.version }}
        git push origin test-v${{ steps.get_version.outputs.version }}

    - uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Metadata for GHCR Dev
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=test-v${{ steps.get_version.outputs.version }}
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.description="Project Butterfly AI test container"
          org.opencontainers.image.licenses=MIT

    - name: Build & Push Dev Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}