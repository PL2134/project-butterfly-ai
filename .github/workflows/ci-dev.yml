# .github/workflows/ci-dev.yml – Dev versioning with build suffix: test-v<prod-version>.<build#>
name: CI – Auto-Version & Push Dev Image to GHCR

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  version-and-build-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Determine next test version based on latest prod tag
      id: get_version
      run: |
        # Get latest production tag
        prod_tag=$(git tag -l 'v*' --sort=-v:refname | head -n1)
        base_ver=${prod_tag#v}  # strip the 'v'

        # Count how many test builds exist for that prod version
        existing=$(git tag -l "test-v${base_ver}.*")
        if [ -z "$existing" ]; then
          build_num=1
        else
          last=$(echo "$existing" | sed -E 's/test-v'"$base_ver"'\.//g' | sort -nr | head -n1)
          build_num=$((last + 1))
        fi

        new_test_tag="test-v${base_ver}.${build_num}"
        echo "::notice title=Dev Docker Version::$new_test_tag"
        echo "version=$new_test_tag" >> $GITHUB_OUTPUT

    - name: Create dev tag
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git tag ${{ steps.get_version.outputs.version }}
        git push origin ${{ steps.get_version.outputs.version }}

    - uses: docker/setup-buildx-action@v3

    - name: Login to GHCR
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.CR_PAT }}

    - name: Metadata for GHCR Dev
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=raw,value=${{ steps.get_version.outputs.version }}
        labels: |
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.description="Project Butterfly AI test container based on ${{ steps.get_version.outputs.version }}"
          org.opencontainers.image.licenses=MIT

    - name: Build & Push Dev Image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}